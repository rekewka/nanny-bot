import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

async def enhanced_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    from data.database import add_user
    add_user(user.id, user.username or user.first_name)

    # Welcome messages with random greeting
    greetings = ["üëã –°–∞–ª–µ–º", "üåü –ü—Ä–∏–≤–µ—Ç", "‚ú® –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "üéâ “ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑"]
    greeting = random.choice(greetings)
    
    welcome_text = (
    f"{greeting}, {user.first_name}!\n\n"
    "üêæ *NANNY BOT* üêæ\n"
    "---------------------\n"  # –∑–∞–º–µ–Ω–∏–ª–∏ –ª–∏–Ω–∏—é
    "–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –ø–∏—Ç–æ–º—Ü–∞–º–∏!\n\n"
    "–ú—ã –ø–æ–º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—É—é –Ω—è–Ω—é –¥–ª—è –≤–∞—à–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ –∏–ª–∏ —Å—Ç–∞—Ç—å –Ω—è–Ω–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –¥–µ–ª–∞—è —Ç–æ, —á—Ç–æ –≤—ã –ª—é–±–∏—Ç–µ!\n\n"
    "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:"
)

    
    # Create inline keyboard for the main options
    keyboard = [
    [InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ –Ω—è–Ω—é", callback_data="find_nanny")],
    [InlineKeyboardButton("üìÖ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="cmd_book")],
    [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_bookings")],
    [InlineKeyboardButton("üë§ –°—Ç–∞—Ç—å –Ω—è–Ω–µ–π", callback_data="become_nanny")],
    [InlineKeyboardButton("‚ÑπÔ∏è –û —Å–µ—Ä–≤–∏—Å–µ", callback_data="about_service")],
    [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = update.message or update.callback_query.message
    await message.reply_text(welcome_text, reply_markup=reply_markup, parse_mode="Markdown")

# Handle button callbacks from the start menu
async def start_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == "find_nanny":
        text = (
            "üîç *–ü–æ–∏—Å–∫ –Ω—è–Ω–∏ –¥–ª—è –ø–∏—Ç–æ–º—Ü–∞*\n\n"
            "–£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—É—é –Ω—è–Ω—é:\n\n"
            "‚Ä¢ /view_nannies ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω—è–Ω—å\n"
            "‚Ä¢ /search ‚Äî —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n\n"
            "–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏:"
        )
        
        commands_keyboard = [
            [InlineKeyboardButton("üêæ –í—Å–µ –Ω—è–Ω–∏", callback_data="cmd_view_nannies")],
            [InlineKeyboardButton("üîç –ü–æ–∏—Å–∫", callback_data="cmd_search")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(commands_keyboard)
        await query.edit_message_text(text, reply_markup=reply_markup)
    
    elif query.data == "become_nanny":
        text = (
            "üë§ *–°—Ç–∞–Ω—å—Ç–µ –Ω—è–Ω–µ–π –¥–ª—è –ø–∏—Ç–æ–º—Ü–µ–≤*\n\n"
            "–õ—é–±–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å?\n"
            "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∫–∞–∫ –Ω—è–Ω—è –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã!\n\n"
            "‚Ä¢ –°–∞–º–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç–µ —Ü–µ–Ω—ã\n"
            "‚Ä¢ –í—ã–±–∏—Ä–∞–µ—Ç–µ —Ç–∏–ø—ã –ø–∏—Ç–æ–º—Ü–µ–≤\n"
            "‚Ä¢ –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:"
        )
        
        nanny_keyboard = [
            [InlineKeyboardButton("‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="cmd_become_nanny")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(nanny_keyboard)
        await query.edit_message_text(text, reply_markup=reply_markup, parse_mode="Markdown")
    
    elif query.data == "about_service":
        text = (
            "‚ÑπÔ∏è *–û –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ*\n\n"
            "üêæ *NANNY BOT* ‚Äî —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–µ–¥–∏–Ω—è–µ—Ç:\n\n"
            "‚Ä¢ –í–ª–∞–¥–µ–ª—å—Ü–µ–≤, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–µ–Ω –ø—Ä–∏—Å–º–æ—Ç—Ä –∑–∞ –ø–∏—Ç–æ–º—Ü–∞–º–∏\n"
            "‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω—è–Ω—å —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã\n\n"
            "–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n"
            "‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –Ω—è–Ω–∏\n"
            "‚úÖ –£–¥–æ–±–Ω—ã–π –ø–æ–∏—Å–∫\n"
            "‚úÖ –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ç–∑—ã–≤–æ–≤\n"
            "‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞\n\n"
            "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º —Å–µ–≥–æ–¥–Ω—è!"
        )
        
        about_keyboard = [
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(about_keyboard)
        await query.edit_message_text(text, reply_markup=reply_markup, parse_mode="Markdown")
    
    elif query.data == "help":
        text = (
            "‚ùì *–ü–æ–º–æ—â—å –∏ –∫–æ–º–∞–Ω–¥—ã*\n\n"
            "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚Ä¢ /start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "‚Ä¢ /view_nannies ‚Äî —Å–ø–∏—Å–æ–∫ –Ω—è–Ω—å\n"
            "‚Ä¢ /search ‚Äî –ø–æ–∏—Å–∫ –Ω—è–Ω—å\n"
            "‚Ä¢ /become_nanny ‚Äî —Å—Ç–∞—Ç—å –Ω—è–Ω–µ–π\n"
            "‚Ä¢ /login ‚Äî –≤—Ö–æ–¥ –¥–ª—è –Ω—è–Ω—å\n"
            "‚Ä¢ /my_bookings ‚Äî –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã\n"
            "‚Ä¢ /myinfo ‚Äî –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n"
            "‚Ä¢ /delete_me ‚Äî —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n\n"
            "–ù—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ @beknur_10"
        )
        
        help_keyboard = [
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(help_keyboard)
        await query.edit_message_text(text, reply_markup=reply_markup)
    
    elif query.data == "back_to_start":
        # Return to main menu
        await enhanced_start(update, context)
    
    elif query.data == "cmd_view_nannies":
        # Execute the view_nannies command
        from bot.commands import view_nannies
        await view_nannies(query, context)
    
    elif query.data == "cmd_search":
        # Send message to start search conversation
        await query.edit_message_text(
            "üîç *–ü–æ–∏—Å–∫ –Ω—è–Ω–∏ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º*\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /search",
            
        )
    
    elif query.data == "cmd_become_nanny":
        # Send message to start nanny registration
        await query.edit_message_text(
            "üë§ *–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω—è–Ω–∏*\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /become_nanny",
           
        )

    elif query.data == "cmd_book":
        await query.edit_message_text(
            "üìÖ *–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞*\n\n"
            "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑, –≤–≤–µ–¥–∏—Ç–µ:\n"
            "`/book <ID –Ω—è–Ω–∏>`\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: `/book 12345678`\n"
            "–ì–¥–µ 12345678 ‚Äî —ç—Ç–æ ID –Ω—è–Ω–∏ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–∏—Å–∫–µ).",
            parse_mode="Markdown"
        )

    elif query.data == "my_bookings":
        from bot.commands import my_bookings
        await my_bookings(query, context)